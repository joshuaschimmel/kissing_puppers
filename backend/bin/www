#!/usr/bin/env node
/**
 * File from the MDN Tutorial || express-create-server
 */


// Module dependenvies
let app = require('../app');
let debug = require('debug')('server');
let http = require('http');

// Get port from environment and store in Express
let port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

// Create HTTP server
let server = http.createServer(app);

// Listen on port, on all network interfaces
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// Normalize Port into a number, string or false
function  normalizePort(value){
    let port = parseInt(val, 10);

    if(isNaN(port)){
        // named pipe?
        return value;
    }
    if (port >= 0){
        // port number
        return port;
    }
    return false;
}

// Event listener for http server error event
function onError(error) {
    if (error.syscall !== 'listen'){
        throw error;
    }

    let bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

// Event listener for http server listening event
function onListening(){
    let addr = server.address();
    
    let bin = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
}